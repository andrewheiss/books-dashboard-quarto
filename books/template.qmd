:::: {.card .border-`r params$person_id` .border-3}

::: {.card-header .text-bg-`r params$person_id` .rounded-0 .fw-bold .fs-4}
All of `r params$person_name`'s books
:::

::: {.card-body}

```{r}
#| include: false
ojs_define(person_id = params$person_id)
```

```{ojs}
//| echo: false
//| output: false

d3 = require("d3")

results = await fetch("https://api.andrewheiss.com/books?person=" + person_id)
  .then(response => response.json())
  .then(data => ({
    ...data,
    data: data.data.map(d => ({
      ...d,
      actual_time: new Date(d.actual_time)
    }))
  }));

table_settings = {
  return {
    sort: "actual_time",
    reverse: true,
    rows: 11.5,
    layout: "auto",
    columns: [
      "actual_time",
      "title",
      "author_name"
    ],
    header: {
      actual_time: "Date",
      title: "Title",
      author_name: "Author"
    },
    format: {
      // Format as nice date + remove 2 spaces for things like "January  2"
      actual_time: d => d3.utcFormat("%A, %B %e, %Y")(d).replace(/  +/g, ' ')
    }
  }
}
```

```{ojs}
//| echo: false
//| output: true
//| classes: search-bar
viewof search_table = Inputs.search(results.data)
```

```{ojs}
//| echo: false
//| output: true
//| classes: book-table
Inputs.table(search_table, table_settings)
```

:::
::::
